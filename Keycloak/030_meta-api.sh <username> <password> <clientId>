#!/bin/bash

# Check if all required arguments are provided
if [ "$#" -ne 3 ]; then
    echo "Usage: $0 <username> <password> <clientId>"
    exit 1
fi


USERNAME=$1
PASSWORD=$2
CLIENTID=$3


# Step 1: Create Access Token
ACCESS_TOKEN=$(curl --location 'https://api.msa2.apps.yokogawa.build/idpt-authz/auth/realms/YIBPOC/protocol/openid-connect/token' \
  --header 'Content-Type: application/x-www-form-urlencoded' \
  --data-urlencode 'client_id=admin-cli' \
  --data-urlencode "username=$USERNAME" \
  --data-urlencode "password=$PASSWORD" \
  --data-urlencode 'grant_type=password' | grep -o '"access_token":"[^"]*' | awk -F':' '{print $2}' | tr -d '"')
#echo "Access Token: $ACCESS_TOKEN"

# Step 2: Create Client ID
CLIENT_ID=$(curl 'https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/clients' \
  -H 'accept: application/json, text/plain, */*' \
  -H "authorization: bearer $ACCESS_TOKEN" \
  -H 'content-type: application/json' \
  --data-raw '{"id":"88de99c8-ccb3-4b49-8923-4bd3e2871e15","clientId":"'"$CLIENTID"'","name":"","description":"","surrogateAuthRequired":false,"enabled":true,"alwaysDisplayInConsole":false,"clientAuthenticatorType":"client-secret","secret":"DhZ0U7ZPWRdtz9JtfRp9fmSEkbz3OMMk","redirectUris":["http://localhost/api/*"],"webOrigins":[],"notBefore":0,"bearerOnly":false,"consentRequired":false,"standardFlowEnabled":true,"implicitFlowEnabled":false,"directAccessGrantsEnabled":true,"serviceAccountsEnabled":true,"authorizationServicesEnabled":true,"publicClient":false,"frontchannelLogout":false,"protocol":"openid-connect","attributes":{"oidc.ciba.grant.enabled":"false","oauth2.device.authorization.grant.enabled":"false","client.secret.creation.time":"1705065874","backchannel.logout.session.required":"true","backchannel.logout.revoke.offline.tokens":"false","request.uris":"","frontchannel.logout.url":"","consent.screen.text":"","backchannel.logout.url":"","login_theme":"","display.on.consent.screen":false},"authenticationFlowBindingOverrides":{},"fullScopeAllowed":true,"nodeReRegistrationTimeout":-1,"protocolMappers":[{"id":"7808a73b-b57c-4ff6-8552-b476b89e182b","name":"Client IP Address","protocol":"openid-connect","protocolMapper":"oidc-usersessionmodel-note-mapper","consentRequired":false,"config":{"user.session.note":"clientAddress","id.token.claim":"true","access.token.claim":"true","claim.name":"clientAddress","jsonType.label":"String"}},{"id":"0e5bc713-895e-4bee-9377-5aca1ed414af","name":"Client Host","protocol":"openid-connect","protocolMapper":"oidc-usersessionmodel-note-mapper","consentRequired":false,"config":{"user.session.note":"clientHost","id.token.claim":"true","access.token.claim":"true","claim.name":"clientHost","jsonType.label":"String"}},{"id":"bf28d76d-d4d1-4d9e-82c9-c46513f795e7","name":"Client ID","protocol":"openid-connect","protocolMapper":"oidc-usersessionmodel-note-mapper","consentRequired":false,"config":{"user.session.note":"clientId","id.token.claim":"true","access.token.claim":"true","claim.name":"clientId","jsonType.label":"String"}}],"defaultClientScopes":["web-origins","acr","aud-yibsuite-ui-stage","aud-yibsuite-ui-demo","roles","profile","email","aud-yibsuite-ui","aud-yibsuite-ui-qa"],"optionalClientScopes":["address","phone","offline_access","microprofile-jwt"],"access":{"view":true,"configure":true,"manage":true},"rootUrl":"http://localhost/api","baseUrl":"","adminUrl":""}' \
  --compressed | jq -r '.[] | select(.clientId == "test-api") | .id')
#clientId_NAME=$(echo "$CLIENT_ID" | jq -r '.clientId')
#echo "Client ID: $CLIENT_ID"

# Step 3: Create Client Secret
export CLIENT_SECRET=$(curl --location 'https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/clients/' --header 'Content-Type: application/json' --header "Authorization: Bearer $ACCESS_TOKEN" | jq -r '.[] | select(.clientId == "'"$CLIENTID"'") | .id')
#echo "Client secret: $CLIENT_SECRET"

#Settings
curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/clients/$CLIENT_SECRET/authz/resource-server" \
  -H 'accept: application/json, text/plain, */*' \
  -H "authorization: bearer $ACCESS_TOKEN" \
  -H 'content-type: application/json' \
  --data-raw '{"policyEnforcementMode":"ENFORCING","decisionStrategy":"AFFIRMATIVE","allowRemoteResourceManagement":true}' \
  --compressed


# Create Scope: create
CREATE_SCOPE_ID=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/clients/$CLIENT_SECRET/authz/resource-server/scope" \
  -H 'accept: application/json, text/plain, */*' \
  -H "authorization: bearer $ACCESS_TOKEN" \
  -H 'content-type: application/json' \
  --data-raw '{"name":"create","displayName":"","iconUri":""}' \
  --compressed | jq -r '.id')
#echo "Create Scope ID: $CREATE_SCOPE_ID"

# Read Scope
READ_SCOPE_ID=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/clients/$CLIENT_SECRET/authz/resource-server/scope" \
  -H 'accept: application/json, text/plain, */*' \
  -H "authorization: bearer $ACCESS_TOKEN" \
  -H 'content-type: application/json' \
  --data-raw '{"name":"Read","displayName":"","iconUri":""}' \
  --compressed | jq -r '.id')
#echo "Read Scope ID: $READ_SCOPE_ID"

# Update Scope
UPDATE_SCOPE_ID=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/clients/$CLIENT_SECRET/authz/resource-server/scope" \
  -H 'accept: application/json, text/plain, */*' \
  -H "authorization: bearer $ACCESS_TOKEN" \
  -H 'content-type: application/json' \
  --data-raw '{"name":"Update","displayName":"","iconUri":""}' \
  --compressed | jq -r '.id')
#echo "Update Scope ID: $UPDATE_SCOPE_ID"


# DataIntegration Resource
DATA_INTEGRATION_RESOURCE_ID=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/clients/$CLIENT_SECRET/authz/resource-server/resource" \
  -H 'accept: application/json, text/plain, */*' \
  -H "authorization: bearer $ACCESS_TOKEN" \
  -H 'content-type: application/json' \
  --data-raw '{"attributes":{},"name":"DataIntegrations","type":"urn:meta-api:resources:dataintegrations","owner":{"id":"'"$CLIENT_SECRET"'","name":"test-rpi"},"ownerManagedAccess":false,"_id":"49c3abda-3df8-4c26-b201-33adfdd16013","uris":["/api/dataintegrations/*"],"icon_uri":"","scopes":[{"id":"'"$CREATE_SCOPE_ID"'","name":"create","iconUri":""},{"id":"'"$READ_SCOPE_ID"'","name":"Read","iconUri":""},{"id":"'"$UPDATE_SCOPE_ID"'","name":"Update","iconUri":""}]}' \
  --compressed)
DATA_INTEGRATION_ID=$(echo "$DATA_INTEGRATION_RESOURCE_ID" | jq -r '._id')
#echo "Data Integration Resource ID: $DATA_INTEGRATION_ID"

# DigitalTwins Resource
DIGITAL_TWINS_RESOURCE_ID=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/clients/$CLIENT_SECRET/authz/resource-server/resource" \
  -H 'accept: application/json, text/plain, */*' \
  -H "authorization: bearer $ACCESS_TOKEN" \
  -H 'content-type: application/json' \
  --data-raw '{"attributes":{},"name":"DigitalTwins","type":"urn:meta-api:resources:digitaltwins","owner":{"id":"'"$CLIENT_SECRET"'","name":"test-rpi"},"ownerManagedAccess":false,"_id":"a39f1747-efb4-4ede-842f-ade08a7399df","uris":["/api/digitaltwins/*"],"scopes":[{"id":"'"$READ_SCOPE_ID"'","name":"Read","iconUri":""},{"id":"'"$UPDATE_SCOPE_ID"'","name":"Update","iconUri":""},{"id":"'"$CREATE_SCOPE_ID"'","name":"create","iconUri":""}],"icon_uri":""}' \
  --compressed)
DIGITAL_TWINS_ID=$(echo "$DIGITAL_TWINS_RESOURCE_ID" | jq -r '._id')
#echo "Digital Twins Resource ID: $DIGITAL_TWINS_ID"

# RolesAndGroups Resource
ROLES_AND_GROUPS_RESOURCE_ID=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/clients/$CLIENT_SECRET/authz/resource-server/resource" \
  -H 'accept: application/json, text/plain, */*' \
  -H "authorization: bearer $ACCESS_TOKEN" \
  -H 'content-type: application/json' \
  --data-raw '{"attributes":{},"name":"RolesAndGroups","type":"urn:meta-api:resources:rolesandgroups","owner":{"id":"'"$CLIENT_SECRET"'","name":"test-rpi"},"ownerManagedAccess":false,"_id":"e106001e-e00b-4072-9300-4f89da6e983b","uris":["api/roles/*","api/users/*","api/groups/*"],"scopes":[{"id":"'"$READ_SCOPE_ID"'","name":"Read","iconUri":""},{"id":"'"$UPDATE_SCOPE_ID"'","name":"Update","iconUri":""},{"id":"'"$CREATE_SCOPE_ID"'","name":"create","iconUri":""}],"icon_uri":""}' \
  --compressed)
ROLES_AND_GROUPS_ID=$(echo "$ROLES_AND_GROUPS_RESOURCE_ID" | jq -r '._id')
#echo "Roles And Groups Resource ID: $ROLES_AND_GROUPS_ID"

# Workspace Resource
WORKSPACE_RESOURCE_ID=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/clients/$CLIENT_SECRET/authz/resource-server/resource" \
  -H 'accept: application/json, text/plain, */*' \
  -H "authorization: bearer $ACCESS_TOKEN" \
  -H 'content-type: application/json' \
  --data-raw '{"attributes":{},"name":"Workspaces","type":"urn:meta-api:resources:workspaces","owner":{"id":"'"$CLIENT_SECRET"'","name":"test-rpi"},"ownerManagedAccess":false,"_id":"abaa63c2-361a-4f51-8a7b-c44aa365bfab","uris":["/api/workspaces/*"],"scopes":[{"id":"'"$READ_SCOPE_ID"'","name":"Read","iconUri":""},{"id":"'"$UPDATE_SCOPE_ID"'","name":"Update","iconUri":""},{"id":"'"$CREATE_SCOPE_ID"'","name":"create","iconUri":""}],"icon_uri":""}' \
  --compressed)
WORKSPACE_ID=$(echo "$WORKSPACE_RESOURCE_ID" | jq -r '._id')
#echo "Workspace Resource ID: $WORKSPACE_ID"

# Data Scientist Policy
DATA_SCIENTIST_POLICY_ID=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/clients/$CLIENT_SECRET/authz/resource-server/policy/role" \
  -H 'accept: application/json, text/plain, */*' \
  -H "authorization: bearer $ACCESS_TOKEN" \
  -H 'content-type: application/json' \
  --data-raw '{"id":"'"$CLIENT_SECRET"'","name":"Data Scientist Policy","description":"","type":"role","logic":"POSITIVE","decisionStrategy":"UNANIMOUS","roles":[{"id":"f70b4137-c2df-49f4-a300-e69a64518ca0","required":true}],"policies":[]}' \
  --compressed | jq -r '.id')
#echo "Data Scientist Policy ID: $DATA_SCIENTIST_POLICY_ID"

# Scientific Manager Policy
SCIENTIFIC_MANAGER_POLICY_ID=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/clients/$CLIENT_SECRET/authz/resource-server/policy/role" \
  -H 'accept: application/json, text/plain, */*' \
  -H "authorization: bearer $ACCESS_TOKEN" \
  -H 'content-type: application/json' \
  --data-raw '{"roles":[{"id":"3a6de70c-e85c-46d3-b3c9-74fc8c607a46","required":true}],"name":"Scientific Manager Policy","description":"","logic":"POSITIVE"}' \
  --compressed | jq -r '.id')
#echo "Scientific Manager Policy ID: $SCIENTIFIC_MANAGER_POLICY_ID"

# Scientist PD Policy
SCIENTIST_PD_POLICY_ID=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/clients/$CLIENT_SECRET/authz/resource-server/policy/role" \
  -H 'accept: application/json, text/plain, */*' \
  -H "authorization: bearer $ACCESS_TOKEN" \
  -H 'content-type: application/json' \
  --data-raw '{"roles":[{"id":"d8273786-ad17-405c-b6cf-9a4fa976e84b","required":true}],"name":"Scientist PD Policy","description":"","logic":"POSITIVE"}' \
  --compressed | jq -r '.id')
#echo "Scientist PD Policy ID: $SCIENTIST_PD_POLICY_ID"

# Super Admin Policy
SUPER_ADMIN_POLICY_ID=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/clients/$CLIENT_SECRET/authz/resource-server/policy/role" \
  -H 'accept: application/json, text/plain, */*' \
  -H "authorization: bearer $ACCESS_TOKEN" \
  -H 'content-type: application/json' \
  --data-raw '{"roles":[{"id":"a2932e13-98f6-4aad-b430-5bf8c22d220c","required":true}],"name":"Super Admin Policy","description":"","logic":"POSITIVE"}' \
  --compressed | jq -r '.id')
#echo "Super Admin Policy ID: $SUPER_ADMIN_POLICY_ID"

# Permission: create data integration permission
CREATE_DATA_INTEGRATION_PERMISSION_ID=$(curl -s "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/clients/$CLIENT_SECRET/authz/resource-server/permission/scope" \
  -H 'accept: application/json, text/plain, */*' \
  -H "authorization: bearer $ACCESS_TOKEN" \
  -H 'content-type: application/json' \
  --data-raw '{
    "name": "create data integration permission",
    "description": "",
    "decisionStrategy": "AFFIRMATIVE",
    "resources": ["'"$DATA_INTEGRATION_ID"'"],
    "policies": ["'"$SUPER_ADMIN_POLICY_ID"'", "'"$SCIENTIFIC_MANAGER_POLICY_ID"'"],
    "scopes": ["'"$CREATE_SCOPE_ID"'"]
  }' \
  --compressed | jq -r '.id')
#echo "Data Integration Permission: $CREATE_DATA_INTEGRATION_PERMISSION_ID"

# Permission: create Roles and Groups permission
CREATE_ROLE_AND_GROUP_PERMISSION_ID=$(curl -s "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/clients/$CLIENT_SECRET/authz/resource-server/permission/scope" \
  -H 'accept: application/json, text/plain, */*' \
  -H "authorization: bearer $ACCESS_TOKEN" \
  -H 'content-type: application/json' \
  --data-raw '{
    "name": "create rolesandgroups permission",
    "description": "",
    "decisionStrategy": "AFFIRMATIVE",
    "resources": ["'"$ROLES_AND_GROUPS_ID"'"],
    "policies": ["'"$SUPER_ADMIN_POLICY_ID"'"],
    "scopes": ["'"$CREATE_SCOPE_ID"'"]
  }' \
  --compressed | jq -r '.id')
#echo "Role and Group Permission: $CREATE_ROLE_AND_GROUP_PERMISSION_ID"

# Permission: create workspace permission
CREATE_WORKSPACE_PERMISSION_ID=$(curl -s "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/clients/$CLIENT_SECRET/authz/resource-server/permission/scope" \
  -H 'accept: application/json, text/plain, */*' \
  -H "authorization: bearer $ACCESS_TOKEN" \
  -H 'content-type: application/json' \
  --data-raw '{
    "name": "create workspace permission",
    "description": "",
    "decisionStrategy": "AFFIRMATIVE",
    "resources": ["'"$WORKSPACE_ID"'"],
    "policies": ["'"$SUPER_ADMIN_POLICY_ID"'","'"$SCIENTIFIC_MANAGER_POLICY_ID"'"],
    "scopes": ["'"$CREATE_SCOPE_ID"'"]
  }' \
  --compressed | jq -r '.id')
#echo "Workspace Permission: $CREATE_WORKSPACE_PERMISSION_ID"

# Permission: read data integration permission
READ_DATA_INTEGRATION_PERMISSION_ID=$(curl -s "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/clients/$CLIENT_SECRET/authz/resource-server/permission/scope" \
  -H 'accept: application/json, text/plain, */*' \
  -H "authorization: bearer $ACCESS_TOKEN" \
  -H 'content-type: application/json' \
  --data-raw '{
    "name": "read data integration permission",
    "description": "",
    "decisionStrategy": "AFFIRMATIVE",
    "resources": ["'"$DATA_INTEGRATION_ID"'"],
    "policies": ["'"$SUPER_ADMIN_POLICY_ID"'", "'"$SCIENTIFIC_MANAGER_POLICY_ID"'", "'"$DATA_SCIENTIST_POLICY_ID"'", "'"$SCIENTIST_PD_POLICY_ID"'"],
    "scopes": ["'"$READ_SCOPE_ID"'"]
  }' \
  --compressed | jq -r '.id')
#echo "Read Data Integration Permission: $READ_DATA_INTEGRATION_PERMISSION_ID"

# Permission: read Roles and Groups permission
READ_ROLE_AND_GROUP_PERMISSION_ID=$(curl -s "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/clients/$CLIENT_SECRET/authz/resource-server/permission/scope" \
  -H 'accept: application/json, text/plain, */*' \
  -H "authorization: bearer $ACCESS_TOKEN" \
  -H 'content-type: application/json' \
  --data-raw '{
    "name": "read rolesandgroups permission",
    "description": "",
    "decisionStrategy": "AFFIRMATIVE",
    "resources": ["'"$ROLES_AND_GROUPS_ID"'"],
    "policies": ["'"$SUPER_ADMIN_POLICY_ID"'"],
    "scopes": ["'"$READ_SCOPE_ID"'"]
  }' \
  --compressed | jq -r '.id')
#echo "Read Role and Group Permission: $READ_ROLE_AND_GROUP_PERMISSION_ID"

# Permission: read workspace permission
READ_WORKSPACE_PERMISSION_ID=$(curl -s "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/clients/$CLIENT_SECRET/authz/resource-server/permission/scope" \
  -H 'accept: application/json, text/plain, */*' \
  -H "authorization: bearer $ACCESS_TOKEN" \
  -H 'content-type: application/json' \
  --data-raw '{
    "name": "read workspace permission",
    "description": "",
    "decisionStrategy": "AFFIRMATIVE",
    "resources": ["'"$WORKSPACE_ID"'"],
    "policies": ["'"$SUPER_ADMIN_POLICY_ID"'","'"$SCIENTIFIC_MANAGER_POLICY_ID"'", "'"$DATA_SCIENTIST_POLICY_ID"'", "'"$SCIENTIST_PD_POLICY_ID"'"],
    "scopes": ["'"$READ_SCOPE_ID"'"]
  }' \
  --compressed | jq -r '.id')
#echo "Read Workspace Permission: $READ_WORKSPACE_PERMISSION_ID"

# Permission: update data integration permission
UPDATE_DATA_INTEGRATION_PERMISSION_ID=$(curl -s "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/clients/$CLIENT_SECRET/authz/resource-server/permission/scope" \
  -H 'accept: application/json, text/plain, */*' \
  -H "authorization: bearer $ACCESS_TOKEN" \
  -H 'content-type: application/json' \
  --data-raw '{
    "name": "update data integration permission",
    "description": "",
    "decisionStrategy": "AFFIRMATIVE",
    "resources": ["'"$DATA_INTEGRATION_ID"'"],
    "policies": ["'"$SUPER_ADMIN_POLICY_ID"'", "'"$SCIENTIFIC_MANAGER_POLICY_ID"'", "'"$DATA_SCIENTIST_POLICY_ID"'", "'"$SCIENTIST_PD_POLICY_ID"'"],
    "scopes": ["'"$UPDATE_SCOPE_ID"'"]
  }' \
  --compressed | jq -r '.id')
#echo "Update Data Integration Permission: $UPDATE_DATA_INTEGRATION_PERMISSION_ID"

# Permission: update Roles and Groups permission
UPDATE_ROLE_AND_GROUP_PERMISSION_ID=$(curl -s "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/clients/$CLIENT_SECRET/authz/resource-server/permission/scope" \
  -H 'accept: application/json, text/plain, */*' \
  -H "authorization: bearer $ACCESS_TOKEN" \
  -H 'content-type: application/json' \
  --data-raw '{
    "name": "update rolesandgroups permission",
    "description": "",
    "decisionStrategy": "AFFIRMATIVE",
    "resources": ["'"$ROLES_AND_GROUPS_ID"'"],
    "policies": ["'"$SUPER_ADMIN_POLICY_ID"'"],
    "scopes": ["'"$UPDATE_SCOPE_ID"'"]
  }' \
  --compressed | jq -r '.id')
#echo "Update Role and Group Permission: $UPDATE_ROLE_AND_GROUP_PERMISSION_ID"

# Permission: update workspace permission
UPDATE_WORKSPACE_PERMISSION_ID=$(curl -s "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/clients/$CLIENT_SECRET/authz/resource-server/permission/scope" \
  -H 'accept: application/json, text/plain, */*' \
  -H "authorization: bearer $ACCESS_TOKEN" \
  -H 'content-type: application/json' \
  --data-raw '{
    "name": "update workspace permission",
    "description": "",
    "decisionStrategy": "AFFIRMATIVE",
    "resources": ["'"$WORKSPACE_ID"'"],
    "policies": ["'"$SUPER_ADMIN_POLICY_ID"'","'"$SCIENTIFIC_MANAGER_POLICY_ID"'"],
    "scopes": ["'"$UPDATE_SCOPE_ID"'"]
  }' \
  --compressed | jq -r '.id')
#echo "Update Workspace Permission: $UPDATE_WORKSPACE_PERMISSION_ID"



#Service_account-user Id:
Service_account_userId=$(curl 'https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/admin-ui-brute-force-user?briefRepresentation=true&first=0&max=101'   -H 'authority: api.msa2.apps.yokogawa.build'   -H 'accept: */*'   -H 'accept-language: en-US,en;q=0.9'   -H "authorization: Bearer $ACCESS_TOKEN"  -H 'referer: https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/YIBPOC/console/'   -H 'sec-ch-ua: "Not_A Brand";v="8", "Chromium";v="120", "Google Chrome";v="120"'   -H 'sec-ch-ua-mobile: ?0'   -H 'sec-ch-ua-platform: "Windows"'   -H 'sec-fetch-dest: empty'   -H 'sec-fetch-mode: cors'   -H 'sec-fetch-site: same-origin'   -H 'user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36'   --compressed | jq -r '.[] | select(.username == "service-account-'"$CLIENTID"'")' | jq -r '.id')
#echo "$Service_account_userId"

export REALM_MANAGEMENT_ID=$(curl --location 'https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/clients/' --header 'Content-Type: application/json' --header "Authorization: Bearer $ACCESS_TOKEN" | jq -r '.[] | select(.clientId == "realm-management") | .id')
#echo "Realm managementId: $REALM_MANAGEMENT_ID"


#Manage_user_roleId:

Manage_user_roleId=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/admin-ui-available-roles/users/$Service_account_userId?first=0&max=101&search="   -H 'authority: api.msa2.apps.yokogawa.build'   -H 'accept: application/json, text/plain, */*'   -H 'accept-language: en-US,en;q=0.9'   -H "authorization: bearer $ACCESS_TOKEN" | jq -r '.[] | select(.role == "manage-users") | .id')
#echo "$Manage_user_roleId"


#Assign_manage_user_roleId:
Assign_manage_user_roleid=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/users/$Service_account_userId/role-mappings/clients/$REALM_MANAGEMENT_ID"   -H 'authority: api.msa2.apps.yokogawa.build'   -H 'accept: application/json, text/plain, */*'   -H 'accept-language: en-US,en;q=0.9'   -H "authorization: bearer $ACCESS_TOKEN" -H 'content-type: application/json' --data-raw '[{"id":"'"$Manage_user_roleId"'","name":"manage-users","description":"${role_manage-users}"}]')
#echo "$Assign_manage_user_roleid"

#View_user_roleId:
View_user_roleId=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/admin-ui-available-roles/users/$Service_account_userId?first=0&max=101&search="   -H 'authority: api.msa2.apps.yokogawa.build'   -H 'accept: application/json, text/plain, */*'   -H 'accept-language: en-US,en;q=0.9'   -H "authorization: bearer $ACCESS_TOKEN" | jq -r '.[] | select(.role == "view-users") | .id')
#echo "$View_user_roleId"

#Assign_manage_user_roleId:
Assign_view_user_roleid=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/users/$Service_account_userId/role-mappings/clients/$REALM_MANAGEMENT_ID"   -H 'authority: api.msa2.apps.yokogawa.build'   -H 'accept: application/json, text/plain, */*'   -H 'accept-language: en-US,en;q=0.9'   -H "authorization: bearer $ACCESS_TOKEN" -H 'content-type: application/json' --data-raw '[{"id":"'"$View_user_roleId"'","name":"view-users","description":"${role_view-users}"}]')
#echo "$Assign_view_user_roleid"

#Manage_realm_roleId:
Manage_realm_roleId=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/admin-ui-available-roles/users/$Service_account_userId?first=0&max=101&search="   -H 'authority: api.msa2.apps.yokogawa.build'   -H 'accept: application/json, text/plain, */*'   -H 'accept-language: en-US,en;q=0.9'   -H "authorization: bearer $ACCESS_TOKEN" | jq -r '.[] | select(.role == "manage-realm") | .id')
#echo "$Manage_realm_roleId"

#Assign_manage_realm_roleId:
Assign_manage_realm_roleid=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/users/$Service_account_userId/role-mappings/clients/$REALM_MANAGEMENT_ID"   -H 'authority: api.msa2.apps.yokogawa.build'   -H 'accept: application/json, text/plain, */*'   -H 'accept-language: en-US,en;q=0.9'   -H "authorization: bearer $ACCESS_TOKEN" -H 'content-type: application/json' --data-raw '[{"id":"'"$Manage_realm_roleId"'","name":"manage-realm","description":"${role_manage-realm}"}]')
#echo "$Assign_view_user_roleid"

#Query_realm_roleId:
Query_realm_roleId=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/admin-ui-available-roles/users/$Service_account_userId?first=0&max=101&search="   -H 'authority: api.msa2.apps.yokogawa.build'   -H 'accept: application/json, text/plain, */*'   -H 'accept-language: en-US,en;q=0.9'   -H "authorization: bearer $ACCESS_TOKEN" | jq -r '.[] | select(.role == "query-realms") | .id')
#echo "$Query_realm_roleId"

#Assign_Query_realm_roleId:
Assign_Query_realm_roleid=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/users/$Service_account_userId/role-mappings/clients/$REALM_MANAGEMENT_ID"   -H 'authority: api.msa2.apps.yokogawa.build'   -H 'accept: application/json, text/plain, */*'   -H 'accept-language: en-US,en;q=0.9'   -H "authorization: bearer $ACCESS_TOKEN" -H 'content-type: application/json' --data-raw '[{"id":"'"$Query_realm_roleId"'","name":"query-realms","description":"${role_query-realms}"}]')
#echo "$Assign_Query_realm_roleid"

#Query_user_roleId:
Query_user_roleId=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/admin-ui-available-roles/users/$Service_account_userId?first=0&max=101&search="   -H 'authority: api.msa2.apps.yokogawa.build'   -H 'accept: application/json, text/plain, */*'   -H 'accept-language: en-US,en;q=0.9'   -H "authorization: bearer $ACCESS_TOKEN" | jq -r '.[] | select(.role == "query-users") | .id')
#echo "$Query_user_roleId"

#Assign_Query_user_roleId:
Assign_Query_user_roleid=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/users/$Service_account_userId/role-mappings/clients/$REALM_MANAGEMENT_ID"   -H 'authority: api.msa2.apps.yokogawa.build'   -H 'accept: application/json, text/plain, */*'   -H 'accept-language: en-US,en;q=0.9'   -H "authorization: bearer $ACCESS_TOKEN" -H 'content-type: application/json' --data-raw '[{"id":"'"$Query_user_roleId"'","name":"query-users","description":"${role_query-users}"}]')
#echo "$Assign_Query_user_roleid"

#View_realm_roleId:
View_realm_roleId=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/admin-ui-available-roles/users/$Service_account_userId?first=0&max=101&search="   -H 'authority: api.msa2.apps.yokogawa.build'   -H 'accept: application/json, text/plain, */*'   -H 'accept-language: en-US,en;q=0.9'   -H "authorization: bearer $ACCESS_TOKEN" | jq -r '.[] | select(.role == "view-realm") | .id')
#echo "$View_realm_roleId"

#Assign_View_realm_roleId:
Assign_View_realm_roleid=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/users/$Service_account_userId/role-mappings/clients/$REALM_MANAGEMENT_ID"   -H 'authority: api.msa2.apps.yokogawa.build'   -H 'accept: application/json, text/plain, */*'   -H 'accept-language: en-US,en;q=0.9'   -H "authorization: bearer $ACCESS_TOKEN" -H 'content-type: application/json' --data-raw '[{"id":"'"$View_realm_roleId"'","name":"view-realm","description":"${role_view-realm}"}]')
#echo "$Assign_View_realm_roleid"

#Manage_client_roleId:
Manage_client_roleId=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/admin-ui-available-roles/users/$Service_account_userId?first=0&max=101&search="   -H 'authority: api.msa2.apps.yokogawa.build'   -H 'accept: application/json, text/plain, */*'   -H 'accept-language: en-US,en;q=0.9'   -H "authorization: bearer $ACCESS_TOKEN" | jq -r '.[] | select(.role == "manage-clients") | .id')
#echo "$Manage_client_roleId"

#Assign_Manage_client_roleId:
Assign_Manage_client_roleid=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/users/$Service_account_userId/role-mappings/clients/$REALM_MANAGEMENT_ID"   -H 'authority: api.msa2.apps.yokogawa.build'   -H 'accept: application/json, text/plain, */*'   -H 'accept-language: en-US,en;q=0.9'   -H "authorization: bearer $ACCESS_TOKEN" -H 'content-type: application/json' --data-raw '[{"id":"'"$Manage_client_roleId"'","name":"manage-clients","description":"${role_manage-clients}"}]')
#echo "$Assign_Manage_client_roleid"

#Create AccountID

export ACCOUNT_ID=$(curl --location 'https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/clients/' --header 'Content-Type: application/json' --header "Authorization: Bearer $ACCESS_TOKEN" | jq -r '.[] | select(.clientId == "account") | .id')
#echo "AccountId: $ACCOUNT_ID"

#View_profile_roleId:
View_profile_roleId=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/admin-ui-available-roles/users/$Service_account_userId?first=0&max=101&search="   -H 'authority: api.msa2.apps.yokogawa.build'   -H 'accept: application/json, text/plain, */*'   -H 'accept-language: en-US,en;q=0.9'   -H "authorization: bearer $ACCESS_TOKEN" | jq -r '.[] | select(.role == "view-profile") | .id')
#echo "$View_profile_roleId"

#Assign_View_profile_user_roleId:
View_profile_user_roleid=$(curl "https://api.msa2.apps.yokogawa.build/idpt-authz/auth/admin/realms/YIBPOC/users/$Service_account_userId/role-mappings/clients/$ACCOUNT_ID"   -H 'authority: api.msa2.apps.yokogawa.build'   -H 'accept: application/json, text/plain, */*'   -H 'accept-language: en-US,en;q=0.9'   -H "authorization: bearer $ACCESS_TOKEN" -H 'content-type: application/json' --data-raw '[{"id":"'"$View_profile_roleId"'","name":"view-profile","description":"${role_view-profile}"}]')
#echo "$View_profile_user_roleid"

echo "Client ID: $clientId_NAME"
echo "Client secret: $CLIENT_SECRET"
echo "Scopes Configuration"
echo "Create Scope ID: $CREATE_SCOPE_ID"
echo "Read Scope ID: $READ_SCOPE_ID"
echo "Update Scope ID: $UPDATE_SCOPE_ID"
echo "Resources configuration"
echo "Data Integration Resource ID: $DATA_INTEGRATION_ID"
echo "Digital Twins Resource ID: $DIGITAL_TWINS_ID"
echo "Roles And Groups Resource ID: $ROLES_AND_GROUPS_ID"
echo "Workspace Resource ID: $WORKSPACE_ID"
echo "Policy configuration"
echo "Data Scientist Policy ID: $DATA_SCIENTIST_POLICY_ID"
echo "Scientific Manager Policy ID: $SCIENTIFIC_MANAGER_POLICY_ID"
echo "Scientist PD Policy ID: $SCIENTIST_PD_POLICY_ID"
echo "Super Admin Policy ID: $SUPER_ADMIN_POLICY_ID"
echo "Permission Configuration"
echo "Create Data Integration Permission: $CREATE_DATA_INTEGRATION_PERMISSION_ID"
echo "Create Role and Group Permission: $CREATE_ROLE_AND_GROUP_PERMISSION_ID"
echo "Create Workspace Permission: $CREATE_WORKSPACE_PERMISSION_ID"
echo "Read Data Integration Permission: $READ_DATA_INTEGRATION_PERMISSION_ID"
echo "Read Role and Group Permission: $READ_ROLE_AND_GROUP_PERMISSION_ID"
echo "Read Workspace Permission: $READ_WORKSPACE_PERMISSION_ID"
echo "Update Data Integration Permission: $UPDATE_DATA_INTEGRATION_PERMISSION_ID"
echo "Update Role and Group Permission: $UPDATE_ROLE_AND_GROUP_PERMISSION_ID"
echo "Update Workspace Permission: $UPDATE_WORKSPACE_PERMISSION_ID"
echo "Service Account Configuration"
echo "Service account userId: $Service_account_userId"
echo "Realm managementId: $REALM_MANAGEMENT_ID"
echo "Manage user roleId: $Manage_user_roleId"
echo "Assigned_manage_user_roleId"
echo "View_user_roleId: $View_user_roleId"
echo "Assigned_view_user_roleId"
echo "Manage_realm_roleId: $Manage_realm_roleId"
echo "Assigned_manage_realm_roleId"
echo "Query_realm_roleId: $Query_realm_roleId"
echo "Assigned_Query_realm_roleId"
echo "Query_user_roleId: $Query_user_roleId"
echo "Assigned_Query_user_roleId"
echo "View_realm_roleId: $View_realm_roleId"
echo "Assigned_View_realm_roleId"
echo "Manage_client_roleId: $Manage_client_roleId"
echo "Assigned_Manage_client_roleId"
echo "AccountId: $ACCOUNT_ID"
echo "View_profile_roleId: $View_profile_roleId"
echo "Assigned View_profile_roleid"
echo "clientId created successfully"
